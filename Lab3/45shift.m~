function [out] = IPfilter(x)
    % Converting the image to double
    x = im2double(x);
    
    % Taking the Fourier transform 
    fft_x = fft2(x);
    
    % Shifting the image
    fft_shift_x = fftshift(fft_x);
    
    % Determining the size of the image 
    [M, N] = size(x);
    
    % Obtain the padded sizes
    P = 2*M;
    Q = 2*N;

    H = zeros(P, Q);
    
    % Computing H(u,v)
    T = 1 ;
    a = 0.1 ;
    b = 0.1 ;
    
    % D_sq will be equal to D(u,v).^2, where D(u,v) is the distance from 
    % point (u,v) to the center point (P/2, Q/2).
    for u = 1:P
        for v = 1:Q
          H(u,v) = 1/(pi * (u*a + v*b)) * sin( pi * (u*a + v*b) ) * exp(-i * pi * (u*a + v*b));
        end
    end
    
    
    out = uint8(x);

end